/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define QWE (0)
#define NAV (1)
#define SYM (2)
#define NUM (3)
#define FUN (4)
/*
 Layout Indices
 Left
 00 01 02 03 04 05
 12 13 14 15 16 17
 24 25 26 27 28 29 30 31
          40 41 42 43 44
                         Right
                               06 07 08 09 10 11
                               18 19 20 21 22 23
                         32 33 34 35 36 37 38 39
                         45 46 47 48 49
 */

&sk {
    release-after-ms = <3000>;
    quick-release;
};

/ {
  combos {
      compatible = "zmk,combos";
      // Both hands
      combo_esc {
          timeout-ms = <50>;
          key-positions = <42 47>;
          bindings = <&kp ESC>;
      };
      combo_capsword {
          timeout-ms = <50>;
          key-positions = <16 19>;
          bindings = <&caps_word>;
      };
      // Left
      combo_ctrl {
          timeout-ms = <50>;
          key-positions = <15 16>;
          bindings = <&sk LCTRL>;
      };
      combo_dquote {
          timeout-ms = <50>;
          key-positions = <14 15>;
          bindings = <&kp DQT>;
      };
      combo_tab {
          timeout-ms = <50>;
          key-positions = <27 28>;
          bindings = <&kp TAB>;
      };
      // Right
      combo_gui {
          timeout-ms = <50>;
          key-positions = <18 22>;
          bindings = <&sk RGUI>;
      };
      combo_alt {
          timeout-ms = <50>;
          key-positions = <19 22>;
          bindings = <&sk RALT>;
      };
      combo_underscore {
          timeout-ms = <50>;
          key-positions = <19 20>;
          bindings = <&kp UNDER>;
      };
      combo_colon {
          timeout-ms = <50>;
          key-positions = <20 21>;
          bindings = <&kp COLON>;
      };
      combo_dash {
          timeout-ms = <50>;
          key-positions = <19 21>;
          bindings = <&kp MINUS>;
      };
  };
  keymap {
    compatible = "zmk,keymap";

    qwerty_layer {
      bindings = <
  &none  &kp Q     &kp W  &kp E &kp R &kp T                                                  &kp Y &kp U  &kp I     &kp O   &kp P        &none
  &none  &kp A     &kp S  &kp D &kp F &kp G                                                  &kp H &kp J  &kp K     &kp L   &kp APOS     &none
  &none  &lt NUM Z &kp X  &kp C &kp V &kp B     &none        &none        &none  &none       &kp N &kp M  &kp COMMA &kp DOT &lt FUN FSLH &none
                        &none &none &sk LSHFT &lt NAV BSPC &none     &none  &lt SYM RET &kp SPACE &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };
    navigation_layer {
      bindings = <
  &none  &none   &none  &none &none &none                                                  &none &none &none &none &none &none
  &none  &none   &none  &none &none &none                                                  &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
  &none  &kp HOME   &kp PGUP  &kp PGDN &kp END &none  &none &none                        &none  &none &none &none &none &none &none &none
                        &none &none &none  &none &none                        &none  &none &none &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };
    symbol_layer {
      bindings = <
  &none  &none   &none  &none &none &none                                                  &none &none &none &none &none &none
  &none  &none   &none  &none &none &none                                                  &none &none &none &none &none &none
  &none  &none   &none  &none &none &none  &none &none                        &none  &none &none &none &none &none &none &none
                        &none &none &none  &none &none                        &none  &none &none &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };
    number_layer {
      bindings = <
  &none  &none   &none  &none &none &none                                                  &kp KP_PLUS &kp N7 &kp N8 &kp N9 &kp KP_MULTIPLY &none
  &none  &none   &none  &none &none &none                                                  &kp KP_EQUAL &kp N4 &kp N5 &kp N6 &none &none
  &none  &none   &none  &none &none &none  &none &none                        &none  &none &kp KP_MINUS &kp N1 &kp N2 &kp N3 &kp KP_DIVIDE &none
                        &none &none &none  &none &none                        &none  &kp KP_DOT &kp N0 &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };
    function_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
      bindings = <
  &kp F9 &kp F10 &kp F11 &kp F12 &none &none                                                  &none &none &none &none &none &none
  &kp F5 &kp F6  &kp F7  &kp F8  &none &none                                                  &none &none &none &none &none &none
  &kp F1 &kp F2  &kp F3  &kp F4  &none &none  &none &none                        &none  &none &none &none &none &none &none &none
                        &none &none &none  &none &none                        &none  &none &none &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };
  };
};
